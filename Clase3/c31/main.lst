CCS PCH C Compiler, Version 4.104, 5967               28-feb.-18 13:25

               Filename: E:\Archivos\PIC\Clase3\c31\main.lst

               ROM used: 422 bytes (1%)
                         Largest free fragment is 32342
               RAM used: 24 (1%) at main() level
                         27 (1%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  GOTO   00DC
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.4
004A:  GOTO   0054
004E:  BTFSC  FF2.1
0050:  GOTO   00BC
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #include "E:\Archivos\PIC\Clase3\c31\main.h" 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES INTRC_IO              	//Internal RC Osc, no CLKOUT 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES BORV20                	//Brownout reset at 2.0V 
.................... #FUSES PUT                   	//Power Up Timer 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES IESO                  	//Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                 	//Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN              	//PORTB pins are configured as digital I/O on RESET 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOWRTB                	//Boot block not write protected 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES NOMCLR                	//Master Clear pin used for I/O 
.................... #FUSES LPT1OSC               	//Timer1 configured for low-power operation 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL12                 	//Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV4               	//System Clock by 4 
.................... #FUSES USBDIV                	//USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                	//USB voltage regulator enabled 
.................... #FUSES ICPRT                 	//ICPRT enabled 
....................  
.................... #use delay(clock=8000000) 
0096:  CLRF   FEA
0098:  MOVLW  1A
009A:  MOVWF  FE9
009C:  MOVF   FEF,W
009E:  BZ    00BA
00A0:  MOVLW  02
00A2:  MOVWF  01
00A4:  CLRF   00
00A6:  DECFSZ 00,F
00A8:  BRA    00A6
00AA:  DECFSZ 01,F
00AC:  BRA    00A4
00AE:  MOVLW  97
00B0:  MOVWF  00
00B2:  DECFSZ 00,F
00B4:  BRA    00B2
00B6:  DECFSZ FEF,F
00B8:  BRA    00A0
00BA:  RETLW  00
....................  
....................  
.................... #int_EXT 
.................... #define retardo 2000 
.................... #define parpadeo 300 
....................  
.................... void  EXT_isr(void) 
.................... {  
....................   output_B(0x00); 
00BC:  CLRF   F93
00BE:  CLRF   F8A
....................    
....................   //Rojo 
....................   output_high(PIN_B3); 
00C0:  BCF    F93.3
00C2:  BSF    F8A.3
....................   delay_ms(retardo); 
00C4:  MOVLW  08
00C6:  MOVWF  19
00C8:  MOVLW  FA
00CA:  MOVWF  1A
00CC:  RCALL  0096
00CE:  DECFSZ 19,F
00D0:  BRA    00C8
....................   output_low(PIN_B3); 
00D2:  BCF    F93.3
00D4:  BCF    F8A.3
.................... } 
....................  
00D6:  BCF    FF2.1
00D8:  GOTO   0054
.................... void main() 
.................... { 
00DC:  CLRF   FF8
00DE:  BCF    FD0.7
00E0:  BSF    07.7
00E2:  CLRF   FEA
00E4:  CLRF   FE9
00E6:  MOVLW  70
00E8:  MOVWF  FD3
00EA:  MOVF   FD3,W
00EC:  MOVF   FC1,W
00EE:  ANDLW  C0
00F0:  IORLW  0F
00F2:  MOVWF  FC1
00F4:  MOVLW  07
00F6:  MOVWF  FB4
....................    enable_interrupts(INT_EXT); 
00F8:  BSF    FF2.4
....................    enable_interrupts(GLOBAL); 
00FA:  MOVLW  C0
00FC:  IORWF  FF2,F
....................    ext_int_edge(L_TO_H); 
00FE:  BSF    FF1.6
....................    setup_oscillator(OSC_8MHZ|OSC_INTRC|OSC_31250|OSC_PLL_OFF); 
0100:  MOVLW  72
0102:  MOVWF  FD3
0104:  MOVLW  80
0106:  MOVWF  F9B
0108:  MOVF   FD3,W
....................    set_tris_a(0xFF); 
010A:  MOVLW  FF
010C:  MOVWF  F92
....................    set_tris_b(0b01); 
010E:  MOVLW  01
0110:  MOVWF  F93
....................     
....................    while(1){ 
....................     
....................        
....................       output_high(PIN_B1); //Verde 1 Prende 
0112:  BCF    F93.1
0114:  BSF    F8A.1
....................       output_high(PIN_B6); //Rojo 2 Prende 
0116:  BCF    F93.6
0118:  BSF    F8A.6
....................       delay_ms(retardo); 
011A:  MOVLW  08
011C:  MOVWF  17
011E:  CLRF   16
0120:  BTFSC  FF2.7
0122:  BSF    16.7
0124:  BCF    FF2.7
0126:  MOVLW  FA
0128:  MOVWF  1A
012A:  RCALL  0096
012C:  BTFSC  16.7
012E:  BSF    FF2.7
0130:  DECFSZ 17,F
0132:  BRA    011E
....................       output_low(PIN_B1); //Verde 1 se apaga 
0134:  BCF    F93.1
0136:  BCF    F8A.1
....................        
....................       output_high(PIN_B2); //Amarillo 1 prende 
0138:  BCF    F93.2
013A:  BSF    F8A.2
....................       delay_ms(retardo); 
013C:  MOVLW  08
013E:  MOVWF  17
0140:  CLRF   16
0142:  BTFSC  FF2.7
0144:  BSF    16.7
0146:  BCF    FF2.7
0148:  MOVLW  FA
014A:  MOVWF  1A
014C:  RCALL  0096
014E:  BTFSC  16.7
0150:  BSF    FF2.7
0152:  DECFSZ 17,F
0154:  BRA    0140
....................       output_low(PIN_B2); //Amarillo 1 apaga 
0156:  BCF    F93.2
0158:  BCF    F8A.2
....................       output_low(PIN_B6); //Rojo 2 apaga 
015A:  BCF    F93.6
015C:  BCF    F8A.6
....................        
....................       output_high(PIN_B3); //Rojo 1 prende 
015E:  BCF    F93.3
0160:  BSF    F8A.3
....................       output_high(PIN_B4); //Verde 2 prende 
0162:  BCF    F93.4
0164:  BSF    F8A.4
....................       delay_ms(retardo); 
0166:  MOVLW  08
0168:  MOVWF  17
016A:  CLRF   16
016C:  BTFSC  FF2.7
016E:  BSF    16.7
0170:  BCF    FF2.7
0172:  MOVLW  FA
0174:  MOVWF  1A
0176:  RCALL  0096
0178:  BTFSC  16.7
017A:  BSF    FF2.7
017C:  DECFSZ 17,F
017E:  BRA    016A
....................       output_low(PIN_B4);  //Verde 2 apaga 
0180:  BCF    F93.4
0182:  BCF    F8A.4
....................        
....................       output_high(PIN_B5); //Amarillo 1 prende 
0184:  BCF    F93.5
0186:  BSF    F8A.5
....................       delay_ms(retardo); 
0188:  MOVLW  08
018A:  MOVWF  17
018C:  CLRF   16
018E:  BTFSC  FF2.7
0190:  BSF    16.7
0192:  BCF    FF2.7
0194:  MOVLW  FA
0196:  MOVWF  1A
0198:  RCALL  0096
019A:  BTFSC  16.7
019C:  BSF    FF2.7
019E:  DECFSZ 17,F
01A0:  BRA    018C
....................       output_low(PIN_B5); //Amarillo 2 apaga 
01A2:  BCF    F93.5
01A4:  BCF    F8A.5
....................    } 
01A6:  BRA    0112
....................    // TODO: USER CODE!! 
.................... } 
....................  
....................  
01A8:  SLEEP 

Configuration Fuses:
   Word  1: C83F   INTRC_IO IESO FCMEN PLL12 CPUDIV4 USBDIV
   Word  2: 0E38   NOBROWNOUT WDT128 NOWDT BORV20 PUT VREGEN
   Word  3: 0500   NOPBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 00A1   STVREN NODEBUG NOLVP NOXINST ICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
