CCS PCH C Compiler, Version 4.104, 5967               14-feb.-18 13:17

               Filename: E:\Archivos\PIC\Clase2\Entradas\maine.lst

               ROM used: 172 bytes (1%)
                         Largest free fragment is 32596
               RAM used: 8 (0%) at main() level
                         9 (0%) worst case
               Stack:    1 locations

*
0000:  GOTO   002A
.................... #include "E:\Archivos\PIC\Clase2\Entradas\maine.h" 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES INTRC_IO              	//Internal RC Osc, no CLKOUT 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES BORV20                	//Brownout reset at 2.0V 
.................... #FUSES PUT                   	//Power Up Timer 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES IESO                  	//Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                 	//Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN              	//PORTB pins are configured as digital I/O on RESET 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOWRTB                	//Boot block not write protected 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES NOMCLR                	//Master Clear pin used for I/O 
.................... #FUSES LPT1OSC               	//Timer1 configured for low-power operation 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL12                 	//Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV4               	//System Clock by 4 
.................... #FUSES USBDIV                	//USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                	//USB voltage regulator enabled 
.................... #FUSES ICPRT                 	//ICPRT enabled 
....................  
.................... #use delay(clock=8000000) 
0004:  CLRF   FEA
0006:  MOVLW  08
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    0028
000E:  MOVLW  02
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  97
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  DECFSZ FEF,F
0026:  BRA    000E
0028:  RETLW  00
....................  
....................  
.................... #define retardo 700 
....................  
.................... int estado = 0; 
.................... int estado2 = 0; 
.................... int aux = 0; 
....................  
.................... void main() 
.................... { 
002A:  CLRF   FF8
002C:  BCF    FD0.7
002E:  CLRF   FEA
0030:  CLRF   FE9
0032:  MOVLW  70
0034:  MOVWF  FD3
0036:  MOVF   FD3,W
0038:  CLRF   04
003A:  CLRF   05
003C:  CLRF   06
003E:  MOVF   FC1,W
0040:  ANDLW  C0
0042:  IORLW  0F
0044:  MOVWF  FC1
0046:  MOVLW  07
0048:  MOVWF  FB4
....................  
....................    setup_oscillator(OSC_8MHZ|OSC_INTRC|OSC_31250|OSC_PLL_OFF); 
004A:  MOVLW  72
004C:  MOVWF  FD3
004E:  MOVLW  80
0050:  MOVWF  F9B
0052:  MOVF   FD3,W
....................     
....................    set_tris_b(0x00); 
0054:  MOVLW  00
0056:  MOVWF  F93
....................    set_tris_a(0xFF); 
0058:  MOVLW  FF
005A:  MOVWF  F92
....................     
....................    output_b(0x00); //Todo b en 0 
005C:  CLRF   F93
005E:  CLRF   F8A
....................     
....................    while(1) 
....................    {   
....................       estado=input(PIN_A0); 
0060:  BSF    F92.0
0062:  CLRF   04
0064:  BTFSC  F80.0
0066:  INCF   04,F
....................        
....................       if(estado==1) 
0068:  DECFSZ 04,W
006A:  BRA    00A8
....................       { 
....................          aux = 1; 
006C:  MOVLW  01
006E:  MOVWF  06
....................          while(aux==1) 
....................          { 
0070:  DECFSZ 06,W
0072:  BRA    00A8
....................             output_high(PIN_B0); 
0074:  BCF    F93.0
0076:  BSF    F8A.0
....................             delay_ms(retardo); 
0078:  MOVLW  04
007A:  MOVWF  07
007C:  MOVLW  AF
007E:  MOVWF  08
0080:  RCALL  0004
0082:  DECFSZ 07,F
0084:  BRA    007C
....................              
....................             output_low(PIN_B0); 
0086:  BCF    F93.0
0088:  BCF    F8A.0
....................             delay_ms(retardo); 
008A:  MOVLW  04
008C:  MOVWF  07
008E:  MOVLW  AF
0090:  MOVWF  08
0092:  RCALL  0004
0094:  DECFSZ 07,F
0096:  BRA    008E
....................              
....................             estado2=input(PIN_A1); 
0098:  BSF    F92.1
009A:  CLRF   05
009C:  BTFSC  F80.1
009E:  INCF   05,F
....................              
....................             if(estado2==1) 
00A0:  DECFSZ 05,W
00A2:  BRA    00A6
....................             aux = 0; 
00A4:  CLRF   06
....................          } 
00A6:  BRA    0070
....................       } 
....................   } 
00A8:  BRA    0060
....................    // TODO: USER CODE!! 
.................... } 
00AA:  SLEEP 

Configuration Fuses:
   Word  1: C83F   INTRC_IO IESO FCMEN PLL12 CPUDIV4 USBDIV
   Word  2: 0E38   NOBROWNOUT WDT128 NOWDT BORV20 PUT VREGEN
   Word  3: 0500   NOPBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 00A1   STVREN NODEBUG NOLVP NOXINST ICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
