CCS PCH C Compiler, Version 4.104, 5967               11-mar.-18 18:12

               Filename: F:\Archivos\PIC\Clase4\Proyecto\main.lst

               ROM used: 206 bytes (1%)
                         Largest free fragment is 32562
               RAM used: 6 (0%) at main() level
                         7 (0%) worst case
               Stack:    1 locations

*
0000:  GOTO   002A
.................... #include "F:\Archivos\PIC\Clase4\Proyecto\main.h" 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES INTRC_IO              	//Internal RC Osc, no CLKOUT 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES BORV20                	//Brownout reset at 2.0V 
.................... #FUSES PUT                   	//Power Up Timer 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES IESO                  	//Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                 	//Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN              	//PORTB pins are configured as digital I/O on RESET 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOWRTB                	//Boot block not write protected 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES NOMCLR                	//Master Clear pin used for I/O 
.................... #FUSES LPT1OSC               	//Timer1 configured for low-power operation 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL12                 	//Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV4               	//System Clock by 4 
.................... #FUSES USBDIV                	//USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                	//USB voltage regulator enabled 
.................... #FUSES ICPRT                 	//ICPRT enabled 
....................  
.................... #use delay(clock=8000000) 
0004:  CLRF   FEA
0006:  MOVLW  06
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    0028
000E:  MOVLW  02
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  97
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  DECFSZ FEF,F
0026:  BRA    000E
0028:  RETLW  00
....................  
....................  
.................... #int_EXT 
.................... #define ret 350 
....................  
.................... int i; 
....................  
.................... void  EXT_isr(void) 
.................... { 
....................      output_B(0x00); 
....................    
....................      //Rojo 
....................      output_high(PIN_B7); 
....................      delay_ms(ret); 
....................      output_low(PIN_B7); 
.................... } 
....................  
.................... void main() 
.................... { 
002A:  CLRF   FF8
002C:  BCF    FD0.7
002E:  CLRF   FEA
0030:  CLRF   FE9
0032:  MOVLW  70
0034:  MOVWF  FD3
0036:  MOVF   FD3,W
0038:  MOVF   FC1,W
003A:  ANDLW  C0
003C:  IORLW  0F
003E:  MOVWF  FC1
0040:  MOVLW  07
0042:  MOVWF  FB4
....................  
....................    setup_adc_ports(NO_ANALOGS|VSS_VDD); 
0044:  MOVF   FC1,W
0046:  ANDLW  C0
0048:  IORLW  0F
004A:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_2); 
004C:  BCF    FC0.0
004E:  BCF    FC0.1
0050:  BCF    FC0.2
0052:  BCF    FC0.7
0054:  BSF    FC2.0
....................    setup_psp(PSP_DISABLED); 
0056:  BCF    F96.4
....................    setup_spi(SPI_SS_DISABLED); 
0058:  BCF    FC6.5
005A:  BCF    F94.7
005C:  BSF    F93.0
005E:  BCF    F93.1
0060:  MOVLW  01
0062:  MOVWF  FC6
0064:  MOVLW  00
0066:  MOVWF  FC7
....................    setup_wdt(WDT_OFF); 
0068:  BCF    FD1.0
....................    setup_timer_0(RTCC_INTERNAL); 
006A:  MOVLW  80
006C:  MOVWF  FD5
....................    setup_timer_1(T1_DISABLED); 
006E:  CLRF   FCD
....................    setup_timer_2(T2_DISABLED,0,1); 
0070:  MOVLW  00
0072:  MOVWF  FCA
0074:  MOVLW  00
0076:  MOVWF  FCB
....................    setup_comparator(NC_NC_NC_NC); 
0078:  MOVLW  07
007A:  MOVWF  FB4
007C:  MOVF   F92,W
007E:  MOVWF  F92
0080:  MOVLW  06
0082:  MOVWF  00
0084:  DECFSZ 00,F
0086:  BRA    0084
0088:  NOP   
008A:  MOVF   FB4,W
008C:  BCF    FA1.6
....................    setup_vref(FALSE); 
008E:  CLRF   FB5
....................    enable_interrupts(INT_EXT); 
0090:  BSF    FF2.4
....................    enable_interrupts(GLOBAL); 
0092:  MOVLW  C0
0094:  IORWF  FF2,F
....................    ext_int_edge(L_TO_H); 
0096:  BSF    FF1.6
....................    setup_oscillator(OSC_8MHZ|OSC_INTRC|OSC_31250|OSC_PLL_OFF); 
0098:  MOVLW  72
009A:  MOVWF  FD3
009C:  MOVLW  80
009E:  MOVWF  F9B
00A0:  MOVF   FD3,W
....................  
....................    // TODO: USER CODE!! 
....................     
....................    set_tris_b (0x01); 
00A2:  MOVLW  01
00A4:  MOVWF  F93
....................     
....................    while(1)  
....................    { 
....................       output_high(PIN_B1); 
00A6:  BCF    F93.1
00A8:  BSF    F8A.1
....................       delay_ms(1000); 
00AA:  MOVLW  04
00AC:  MOVWF  05
00AE:  MOVLW  FA
00B0:  MOVWF  06
00B2:  RCALL  0004
00B4:  DECFSZ 05,F
00B6:  BRA    00AE
....................       output_low(PIN_B1); 
00B8:  BCF    F93.1
00BA:  BCF    F8A.1
....................       delay_ms(1000); 
00BC:  MOVLW  04
00BE:  MOVWF  05
00C0:  MOVLW  FA
00C2:  MOVWF  06
00C4:  RCALL  0004
00C6:  DECFSZ 05,F
00C8:  BRA    00C0
....................       /*for(i=0x02;i<=0x64;i*=2){ 
....................          output_b(i); 
....................          delay_ms(ret); 
....................       }*/ 
....................    } 
00CA:  BRA    00A6
.................... } 
....................  
....................  
00CC:  SLEEP 

Configuration Fuses:
   Word  1: C83F   INTRC_IO IESO FCMEN PLL12 CPUDIV4 USBDIV
   Word  2: 0E38   NOBROWNOUT WDT128 NOWDT BORV20 PUT VREGEN
   Word  3: 0500   NOPBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 00A1   STVREN NODEBUG NOLVP NOXINST ICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
